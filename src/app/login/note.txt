Data Sharing

Data should be shared from HTML & TS
html=view
ts=component


The method used to share data= Data Binding
                               ============

There are many methods in Data Binding
1.    One Way Binding 
  1.1   Component to view - from ts file to html
    1.1.1 String interpolation      {{}} Double curly brackets
    1.1.2 Property Binding          [property_name]="value"

   1.2  View to Component - from html to ts
    1.2.1 Event Binding             (event_name)="method_name()"
    1.2.2 $event binding            (event_name)="method_name($event)"
    1.2.3 Event Binding using template reference variable       #variable_name


2.     Two Way Binding
  2.1   ngModel     FormsModule(a module in ngModel )     [(ngModel)]="value"




Routing in Angular
------------------
navigateByUrl   (instead of window.location in JS)    (is a method of class Router)


Dependency Injection
--------------------
To share data between 2 classes
Inside constructor
access specifier(public/private) variable:class_name

Angular Services
----------------
To store data (redundant data)
ng g s serviceName

Angular Directives
------------------
* is used to denote Angular Directives
-structural directive - can apply data directly from Array or Object/ to get data from array
                      - ngFor  - use instead of forloop. Used in HTML file
                      - ngIf   - use instead of IfElse . Used in HTML file


Form Validation in Angular
--------------------------
1. Template Driven Form - First create HTML form. Then apply validation.
2. Model Driven Form - A model is created for form in TS. Then apply validation methods.
                     - ReactiveFormsModule - module used for model form creation.
                     - FormBuilder  - class in ReactiveForm for model form creation.

                     a model form contains
                      - form group
                      - array
                      - controller


To spot and display error messages while entering form data, use the format given below(Can access the output of input attribute):
    this.name_of_form.get('uname')?.errors

    If
    Match the rule :- The output will be an empty response
    Does not Match the rule :- The output contains a content


Local Storage in Angular
------------------------    

-setItem
-getItem
-removeItem

